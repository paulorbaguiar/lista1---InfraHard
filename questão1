.globl start  

.data 

a: .word 0  #atribuir variável a
b: .word 0  #atribuir variável b

.text 

start: 
lw $a0, a lw $a1, b   #load o valor de a em um registrador
li $t0, 10  #determina o número de interações do loop
loop: beq $t0, $zero, end #checa se o loop terminou
beq $a0, $zero, caso_0 #Caso o valor atribuído seja zero, branch para cas_0
mult $t0, $t0 #Multiplicação dos valores $t0
mflo $t1 #guarda o valor da multiplicação acima
beq $t1, $a0, perfect_square #Caso seja quadrado perfeito (i * i == a), branch para perfect square 
addi $t0, $t0, -1 #Caso não seja quadrado perfeito, subtrai 1 de a 
move $s1, $a0 #Move o valor de $a0(a) para $s1 (result_not_perfect)
j loop   #Retorna ao loop caso não seja uma quadrado perfeito

caso_0: 
li $v1, 1 #Atribui 1 ao registrador #v1
j end  #Pula para end e termina o código

perfect_square: 
li $a1, 1 #Caso seja quadrado perfeito, atribui a $a1(b)
move $s0, $a0 #$s0(result_perfect_square) recebe o valor de $a0 (a)
j end #Pula e termina o código

end: li $v0, 10
syscall
